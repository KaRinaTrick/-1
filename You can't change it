class Vehicle:
    # __COLOR_VARIANTS = ['blue', 'green', 'red', 'yellow', 'purple']
    __COLOR_VARIANTS = ['blue', 'red', 'green', 'black', 'white']

    def __init__(self, owner, __model, __engine_power, __color):
        self.owner = owner
        self.__model = __model
        self.__engine_power = __engine_power
        self.__color = __color

    def __str__(self):
        return self.owner, self.__model, self.__color

    def __int__(self):
        return self.__engine_power


class Sedan(Vehicle):
    __PASSENGERS_LIMIT = 5

    def get_model(self):
        return f'Модель: {self._Vehicle__model}'

    def get_horsepower(self):
        return f'Мощность двигателя: {self._Vehicle__engine_power}'

    def get_color(self):
        return f'Цвет: {self._Vehicle__color}'

    def print_info(self):
        print(f'{self.get_model()}\n{self.get_horsepower()}\n{self.get_color()}\nВладелец: {self.owner}')

    def set_color(self, new_color):
        for i in range(len(self._Vehicle__COLOR_VARIANTS)):
            if new_color.lower() in self._Vehicle__COLOR_VARIANTS:
                self._Vehicle__color = new_color
            else:
                print(f'Нельзя сменить цвет на {new_color}.')
                break


vehicle1 = Sedan('Fedos', 'Toyota Mark II', 500, 'blue')
# Изначальные свойства
vehicle1.print_info()
# Меняем свойства (в т.ч. вызывая методы)
vehicle1.set_color('Pink')
vehicle1.set_color('BLACK')
vehicle1.owner = 'Vasyok'
# Проверяем что поменялось
vehicle1.print_info()


'''
Примечания:
1.Обращайте особое внимание на условия задачи: что является атрибутом класса, а что атрибутом объекта.
2.Методы, где описано получение/перезапись каких-либо атрибутов рекомендуется начинать со слов get и set соответственно.
Такие методы часто используются для доступа к скрытым атрибутам и позволяют написать дополнительную логику(код) при их
получении/изменении.
3.Не забывайте использовать self при обращении к атрибутам объекта.
4.Константные(постоянные) значения в Python принято писать полностью в верхнем регистре (капсом), как в случае списка
цветов или количеством пассажиров.
'''
